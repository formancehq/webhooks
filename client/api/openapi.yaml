openapi: 3.0.3
info:
  title: Webhooks server
  version: WEBHOOKS_VERSION
servers:
- url: /
paths:
  /configs:
    get:
      description: Sorted by updated date descending
      operationId: getManyConfigs
      parameters:
      - description: Optional filter by Config ID
        explode: true
        in: query
        name: id
        required: false
        schema:
          example: 4997257d-dfb6-445b-929c-cbe2ab182818
          type: string
        style: form
      - description: Optional filter by endpoint URL
        explode: true
        in: query
        name: endpoint
        required: false
        schema:
          example: https://example.com
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigsResponse'
          description: OK
      summary: Get many configs
      tags:
      - Webhooks
    post:
      description: |
        Insert a new webhooks config.

        The endpoint should be a valid https URL and be unique.

        The secret is the endpoint's verification secret.
        If not passed or empty, a secret is automatically generated.
        The format is a random string of bytes of size 24, base64 encoded. (larger size after encoding)

        All eventTypes are converted to lower-case when inserted.
      operationId: insertConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
          description: Config created successfully.
        "400":
          content:
            text/plain:
              schema:
                example: endpoints should be valid urls
                type: string
          description: Bad Request
      summary: Insert a new config
      tags:
      - Webhooks
  /configs/{id}:
    delete:
      description: Delete a webhooks config by ID.
      operationId: deleteConfig
      parameters:
      - description: Config ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 4997257d-dfb6-445b-929c-cbe2ab182818
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Config successfully deleted.
      summary: Delete one config
      tags:
      - Webhooks
  /configs/{id}/test:
    get:
      description: Test a config by sending a webhook to its endpoint.
      operationId: testConfig
      parameters:
      - description: Config ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 4997257d-dfb6-445b-929c-cbe2ab182818
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttemptResponse'
          description: OK
      summary: Test one config
      tags:
      - Webhooks
  /configs/{id}/activate:
    put:
      description: "Activate a webhooks config by ID, to start receiving webhooks\
        \ to its endpoint."
      operationId: activateConfig
      parameters:
      - description: Config ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 4997257d-dfb6-445b-929c-cbe2ab182818
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
          description: Config successfully activated.
        "304":
          content: {}
          description: "Config not modified, was already activated."
      summary: Activate one config
      tags:
      - Webhooks
  /configs/{id}/deactivate:
    put:
      description: "Deactivate a webhooks config by ID, to stop receiving webhooks\
        \ to its endpoint."
      operationId: deactivateConfig
      parameters:
      - description: Config ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 4997257d-dfb6-445b-929c-cbe2ab182818
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
          description: Config successfully deactivated.
        "304":
          content: {}
          description: "Config not modified, was already deactivated."
      summary: Deactivate one config
      tags:
      - Webhooks
  /configs/{id}/secret/change:
    put:
      description: |
        Change the signing secret of the endpoint of a webhooks config.

        If not passed or empty, a secret is automatically generated.
        The format is a random string of bytes of size 24, base64 encoded. (larger size after encoding)
      operationId: changeConfigSecret
      parameters:
      - description: Config ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 4997257d-dfb6-445b-929c-cbe2ab182818
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigChangeSecret'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
          description: Secret successfully changed.
      summary: Change the signing secret of a config
      tags:
      - Webhooks
components:
  schemas:
    ConfigUser:
      example:
        endpoint: https://example.com
        secret: V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3
        eventTypes:
        - TYPE1
        - TYPE2
      properties:
        endpoint:
          example: https://example.com
          type: string
        secret:
          example: V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3
          type: string
        eventTypes:
          example:
          - TYPE1
          - TYPE2
          items:
            example: TYPE1
            type: string
          type: array
      required:
      - endpoint
      - eventTypes
      type: object
    ConfigsResponse:
      example:
        cursor:
          data:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            endpoint: https://example.com
            active: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            secret: V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3
            eventTypes:
            - TYPE1
            - TYPE2
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - createdAt: 2000-01-23T04:56:07.000+00:00
            endpoint: https://example.com
            active: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            secret: V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3
            eventTypes:
            - TYPE1
            - TYPE2
            updatedAt: 2000-01-23T04:56:07.000+00:00
          hasMore: false
      properties:
        cursor:
          $ref: '#/components/schemas/Cursor'
      required:
      - cursor
      type: object
    Cursor:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          endpoint: https://example.com
          active: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          secret: V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3
          eventTypes:
          - TYPE1
          - TYPE2
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          endpoint: https://example.com
          active: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          secret: V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3
          eventTypes:
          - TYPE1
          - TYPE2
          updatedAt: 2000-01-23T04:56:07.000+00:00
        hasMore: false
      properties:
        hasMore:
          example: false
          type: boolean
        data:
          items:
            $ref: '#/components/schemas/Config'
          type: array
      required:
      - data
      - hasMore
      type: object
    ConfigResponse:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          endpoint: https://example.com
          active: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          secret: V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3
          eventTypes:
          - TYPE1
          - TYPE2
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/Config'
      required:
      - data
      type: object
    Config:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        endpoint: https://example.com
        active: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        secret: V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3
        eventTypes:
        - TYPE1
        - TYPE2
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          type: string
        endpoint:
          example: https://example.com
          type: string
        secret:
          example: V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3
          type: string
        eventTypes:
          example:
          - TYPE1
          - TYPE2
          items:
            example: TYPE1
            type: string
          type: array
        active:
          example: true
          type: boolean
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
    ConfigChangeSecret:
      example:
        secret: V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3
      properties:
        secret:
          example: V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3
          type: string
      type: object
    AttemptResponse:
      example:
        data:
          nextRetryAfter: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          webhookID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          payload: "{\"data\":\"test\"}"
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          retryAttempt: 1
          config:
            createdAt: 2000-01-23T04:56:07.000+00:00
            endpoint: https://example.com
            active: true
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            secret: V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3
            eventTypes:
            - TYPE1
            - TYPE2
            updatedAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
          statusCode: 200
          status: success
      properties:
        data:
          $ref: '#/components/schemas/Attempt'
      required:
      - data
      type: object
    Attempt:
      example:
        nextRetryAfter: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        webhookID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        payload: "{\"data\":\"test\"}"
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        retryAttempt: 1
        config:
          createdAt: 2000-01-23T04:56:07.000+00:00
          endpoint: https://example.com
          active: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          secret: V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3
          eventTypes:
          - TYPE1
          - TYPE2
          updatedAt: 2000-01-23T04:56:07.000+00:00
        updatedAt: 2000-01-23T04:56:07.000+00:00
        statusCode: 200
        status: success
      properties:
        id:
          format: uuid
          type: string
        webhookID:
          format: uuid
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        config:
          $ref: '#/components/schemas/Config'
        payload:
          example: "{\"data\":\"test\"}"
          type: string
        statusCode:
          example: 200
          type: integer
        retryAttempt:
          example: 1
          type: integer
        status:
          example: success
          type: string
        nextRetryAfter:
          format: date-time
          type: string
