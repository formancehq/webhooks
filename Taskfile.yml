version: '3'

env:
  LOG_LEVEL: "debug"
  KAFKA_DEFAULT_TOPIC: "default"
  SVIX_TOKEN: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NTk3MzMwMDUsImV4cCI6MTk3NTA5MzAwNSwibmJmIjoxNjU5NzMzMDA1LCJpc3MiOiJzdml4LXNlcnZlciIsInN1YiI6Im9yZ18yM3JiOFlkR3FNVDBxSXpwZ0d3ZFhmSGlyTXUifQ.qVZYqK6s5Srk19LXwQj0TlulRD97jsJ73N2Ti6TJU68"
  SVIX_SERVER_URL: "http://127.0.0.1:8071"
  SVIX_APP_NAME: "webhooks"
  SVIX_APP_ID: "84a0dabe-71d3-453d-a089-f9f6dbe3402e"

vars:
  SERVICE: "webhooks"
  APP_VERSION: "develop"
  APP_SHA: "ksjfsldkf"

  PKG: "./..."
  FAILFAST: "-failfast"
  TIMEOUT: "1m"
  RUN: "''"

tasks:
  default:
    cmds:
      - task: lint
      - task: tests:local

  lint:
    cmds:
      - golangci-lint run -v --fix

  tests:local:
    cmds:
      - task: docker
      - >
        go test -v {{.FAILFAST}} -race -coverpkg {{.PKG}} -coverprofile coverage.out
        -run {{.RUN}} -timeout {{.TIMEOUT}} {{.PKG}} |
        sed ''/PASS/s//$(printf "\033[32mPASS\033[0m")/'' |
        sed ''/FAIL/s//$(printf "\033[31mFAIL\033[0m")/'' |
        sed ''/RUN/s//$(printf "\033[34mRUN\033[0m")/''
      - task: coverage

  tests:
    cmds:
      - task: docker
      - go test -race -coverpkg {{.PKG}} -coverprofile coverage.out {{.PKG}}

  build:local:
    cmds:
      - go build -o {{.SERVICE}}

  install:lint:
    cmds:
      - >
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh |
        sh -s -- -b $(go env GOPATH)/bin latest

  docker:
    cmds:
      - docker compose up -d mongo redpanda postgres redis svix
      - docker compose exec -ti redpanda rpk topic create {{.KAFKA_DEFAULT_TOPIC}} || exit 0

  coverage:
    cmds:
      - go tool cover -html=coverage.out -o coverage.html
      - echo "To open the html coverage file, use one of the following commands:"
      - echo "open coverage.html on mac"
      - echo "xdg-open coverage.html on linux"
    silent: true

  clean:
    cmds:
      - go clean
      - rm -f {{.SERVICE}} coverage.out coverage.html
      - docker compose down -v

  build:
    run: once
    cmds:
      - docker build -t numary:{{.SERVICE}}-{{.APP_SHA}} --target app --build-arg APP_SHA={{.APP_SHA}} --build-arg APP_VERSION={{.APP_VERSION}} .
