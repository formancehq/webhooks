openapi: 3.0.3
info:
  title: Webhooks server
  version: v0.2.2

paths:
  /_healthcheck:
    get:
      summary: Health check of the server
      operationId: healthCheck
      tags:
        - Health
      responses:
        "200":
          description: The server is healthy
          content: {}

  /configs:
    get:
      summary: Get many configs
      description: Sorted by updated date descending
      operationId: getManyConfigs
      tags:
        - Webhooks
      parameters:
        - name: id
          in: query
          description: Optional filter by Config ID
          required: false
          schema:
            type: string
            example: 4997257d-dfb6-445b-929c-cbe2ab182818
        - name: endpoint
          in: query
          description: Optional filter by endpoint URL
          required: false
          schema:
            type: string
            example: https://example.com
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - cursor
                properties:
                  cursor:
                    allOf:
                      - $ref: '#/components/schemas/Cursor'
                      - type: object
                        properties:
                          data:
                            type: array
                            items:
                              $ref: '#/components/schemas/ConfigActivated'
                        required:
                          - data

    post:
      summary: |
        Insert a new config
      description: |
        Insert a new config.
        
        The endpoint should be a valid https URL and be unique.
        
        The secret is the endpoint's verification secret. 
        If not passed or empty, a secret is automatically generated. 
        The format is a random string of bytes of size 24, base64 encoded. (larger size after encoding)
        
        All eventTypes are converted to lower-case when inserted.
      operationId: insertOneConfig
      tags:
        - Webhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigUser'
        required: true
      responses:
        "200":
          description: Config created successfully.
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/ConfigActivatedResponse'

        "400":
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                example: endpoints should be valid urls

  /configs/{id}:
    delete:
      summary: Delete one config
      operationId: deleteOneConfig
      tags:
        - Webhooks
      parameters:
        - name: id
          in: path
          description: Config ID
          required: true
          schema:
            type: string
            example: 4997257d-dfb6-445b-929c-cbe2ab182818
      responses:
        "200":
          description: Config successfully deleted.
          content: {}

  /configs/{id}/test:
    get:
      summary: Test one config
      description: |
        Test one config by sending a webhook to its endpoint.
      operationId: testOneConfig
      tags:
        - Webhooks
      parameters:
        - name: id
          in: path
          description: Config ID
          required: true
          schema:
            type: string
            example: 4997257d-dfb6-445b-929c-cbe2ab182818
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttemptResponse'

  /configs/{id}/activate:
    put:
      summary: Activate one config
      operationId: activateOneConfig
      tags:
        - Webhooks
      parameters:
        - name: id
          in: path
          description: Config ID
          required: true
          schema:
            type: string
            example: 4997257d-dfb6-445b-929c-cbe2ab182818
      responses:
        "200":
          description: Config successfully activated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigActivatedResponse'
        "304":
          description: Config not modified, was already activated.
          content: {}

  /configs/{id}/deactivate:
    put:
      summary: Deactivate one config
      operationId: deactivateOneConfig
      tags:
        - Webhooks
      parameters:
        - name: id
          in: path
          description: Config ID
          required: true
          schema:
            type: string
            example: 4997257d-dfb6-445b-929c-cbe2ab182818
      responses:
        "200":
          description: Config successfully deactivated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigDeactivatedResponse'
        "304":
          description: Config not modified, was already deactivated.
          content: {}

  /configs/{id}/secret/change:
    put:
      summary: Change the signing secret of a config
      description: |
        Change the signing secret of the endpoint of a config.
        
        If not passed or empty, a secret is automatically generated. 
        The format is a random string of bytes of size 24, base64 encoded. (larger size after encoding)
      operationId: changeOneConfigSecret
      tags:
        - Webhooks
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                secret:
                  type: string
                  example: "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3"
              required:
                - secret
      parameters:
        - name: id
          in: path
          description: Config ID
          required: true
          schema:
            type: string
            example: 4997257d-dfb6-445b-929c-cbe2ab182818
      responses:
        "200":
          description: Secret successfully changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigActivatedResponse'

components:
  schemas:
    ConfigUser:
      properties:
        endpoint:
          type: string
          example: "https://example.com"
        secret:
          type: string
          example: "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3"
        eventTypes:
          type: array
          items:
            type: string
            example: "TYPE1"
          example: ["TYPE1", "TYPE2"]

    ConfigActivatedResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ConfigActivated'

    ConfigDeactivatedResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ConfigDeactivated'

    ConfigActivated:
      properties:
        endpoint:
          type: string
          example: "https://example.com"
        secret:
          type: string
          example: "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3"
        eventTypes:
          type: array
          items:
            type: string
            example: "TYPE1"
          example: ["TYPE1", "TYPE2"]
        active:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
          example: "2022-07-20T07:31:40Z"
        modifiedAt:
          type: string
          format: date-time
          example: "2022-07-20T08:32:59Z"

    ConfigDeactivated:
      properties:
        endpoint:
          type: string
          example: "https://example.com"
        secret:
          type: string
          example: "V0bivxRWveaoz08afqjU6Ko/jwO0Cb+3"
        eventTypes:
          type: array
          items:
            type: string
            example: "TYPE1"
          example: ["TYPE1", "TYPE2"]
        active:
          type: boolean
          example: false
        createdAt:
          type: string
          format: date-time
          example: "2022-07-20T07:31:40Z"
        modifiedAt:
          type: string
          format: date-time
          example: "2022-07-20T08:32:59Z"

    AttemptResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Attempt'

    Attempt:
      properties:
        webhookID:
          type: string
          example: 4997257d-dfb6-445b-929c-cbe2ab182818
        date:
          type: string
          format: date-time
        config:
          $ref: '#/components/schemas/ConfigActivated'
        payload:
          type: string
          example: '{"data":"test"}'
        statusCode:
          type: integer
          example: 200
        retryAttempt:
          type: integer
          example: 1
        status:
          type: string
          example: success
        nextRetryAfter:
          type: string
          format: date-time

    Cursor:
      type: object
      properties:
        has_more:
          type: boolean
          example: false
