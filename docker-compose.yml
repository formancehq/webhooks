services:
  server:
    command: reflex -r '\.go' -s -- sh -c "go run . server"
    build:
      target: dev
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:8080/_healthcheck" ]
      interval: 20s
      timeout: 10s
      retries: 5
    volumes:
      - .:/app
    ports:
      - "8080:8080"
    environment:
      STORAGE_MONGO_CONN_STRING: "mongodb://admin:admin@mongo:27017/"
      SVIX_TOKEN: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NTk3MzMwMDUsImV4cCI6MTk3NTA5MzAwNSwibmJmIjoxNjU5NzMzMDA1LCJpc3MiOiJzdml4LXNlcnZlciIsInN1YiI6Im9yZ18yM3JiOFlkR3FNVDBxSXpwZ0d3ZFhmSGlyTXUifQ.qVZYqK6s5Srk19LXwQj0TlulRD97jsJ73N2Ti6TJU68"
      SVIX_SERVER_URL: "http://svix:8071"
      SVIX_APP_NAME: "webhooks"
      SVIX_APP_ID: "84a0dabe-71d3-453d-a089-f9f6dbe3402e"

  worker:
    command: reflex -r '\.go' -s -- sh -c "go run . worker"
    build:
      target: dev
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:8081/_healthcheck" ]
      interval: 20s
      timeout: 10s
      retries: 5
    volumes:
      - .:/app
    environment:
      STORAGE_MONGO_CONN_STRING: "mongodb://admin:admin@mongo:27017/"
      KAFKA_DEFAULT_TOPIC: "default"
      KAFKA_BROKERS: "redpanda:29092"
      SVIX_TOKEN: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NTk3MzMwMDUsImV4cCI6MTk3NTA5MzAwNSwibmJmIjoxNjU5NzMzMDA1LCJpc3MiOiJzdml4LXNlcnZlciIsInN1YiI6Im9yZ18yM3JiOFlkR3FNVDBxSXpwZ0d3ZFhmSGlyTXUifQ.qVZYqK6s5Srk19LXwQj0TlulRD97jsJ73N2Ti6TJU68"
      SVIX_SERVER_URL: "http://svix:8071"
      SVIX_APP_NAME: "webhooks"
      SVIX_APP_ID: "84a0dabe-71d3-453d-a089-f9f6dbe3402e"

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "admin"
      MONGO_INITDB_ROOT_PASSWORD: "admin"
    depends_on:
      redpanda:
        condition: service_healthy

  redpanda:
    image: docker.vectorized.io/vectorized/redpanda
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '0'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
    healthcheck:
      test: curl -s -f -k http://127.0.0.1:9644/metrics >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "9092:9092"
      - "9644:9644"

  svix:
    image: svix/svix-server
    ports:
      - "8071:8071"
    environment:
      WAIT_FOR: "true"  # We want to wait for the default services
      SVIX_REDIS_DSN: "redis://redis:6379"
      SVIX_DB_DSN: "postgresql://webhooks:webhooks@postgres/webhooks"
      SVIX_JWT_SECRET: "8KjzRXrKkd9YFcNyqLSIY8JwiaCeRc6WK4UkMnSW"
      SVIX_LOG_LEVEL: "trace"
      SVIX_WHITELABEL_HEADERS: "true"
      SVIX_ENDPOINT_HTTPS_ONLY: "true"

  postgres:
    image: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U webhooks" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: "webhooks"
      POSTGRES_PASSWORD: "webhooks"
      POSTGRES_DB: "webhooks"

  redis:
    image: redis:alpine
    # Enable persistence
    command: "--save 60 500 --appendonly yes --appendfsync everysec"

  collector:
    image: otel/opentelemetry-collector
